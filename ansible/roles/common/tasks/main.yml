---
- name: ensure required packages are installed
  become: true
  apt: name={{item}} state=present
  with_items:
  - git
  - gcc
  - python3-dev

# get recent virtualenv, which bundles a recent pip
- command: mktemp -d
  register: mktempd_out
- name: download virtualenv-15.1.0
  become: true
  get_url:
    url: https://pypi.python.org/packages/d4/0c/9840c08189e030873387a73b90ada981885010dd9aea134d6de30cd24cb8/virtualenv-15.1.0.tar.gz
    dest: '{{mktempd_out.stdout}}'
    checksum: sha1:995ce0fa007210ac2f10258999d06813ecdd6eeb
- name: extract virtualenv-15.1.0.tar.gz
  unarchive: src={{mktempd_out.stdout}}/virtualenv-15.1.0.tar.gz dest={{mktempd_out.stdout}} copy=no
- name: run "python3 setup.py install" in {{mktempd_out.stdout}}/virtualenv-15.1.0
  become: true
  command: python3 setup.py install
           chdir={{mktempd_out.stdout}}/virtualenv-15.1.0
           creates=/usr/local/lib/python3.4/dist-packages/virtualenv-15.1.0-py3.4.egg/virtualenv.py
- file:
    path: '{{mktempd_out.stdout}}'
    state: absent
  become: true
  become_user: root

# this debug message produces the below output on Ubuntu xenial:
#- debug:
#    msg: "System {{ inventory_hostname }} has os_family: {{ ansible_os_family }} and distribution_major_version: {{ ansible_distribution_major_version }}"
# ok: [wbgrp-svc111] => {
#    "msg": "System wbgrp-svc111 has os_family: Debian and distribution_major_version: 16"
# }
- name: Include ferm firewall rules if we are on Ubuntu xenial
  when: ansible_os_family == "Debian" and ansible_distribution_major_version == "16"
  include: ferm_firewall.yml
